When would you want to use a remote repository rather than keeping all your work local?

When you want to share code with other people or to work on multiple devices; also for back-up purposes.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date 
with your remote repository?

It's better to control what code enters in your local version; you can currently work on a feature on
a branch and maybe somebody commits code related to the same feature (in the same branch) in the remote 
and conflicts with your code.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Fork is used to create a new GitHub repository with the content of an existing GitHub repository while 
retaining a reference to the original. It is a GitHub action, and the service keeps track of the forks 
for each repository.
You can clone a remote or a local repository - create a copy of a repo without a link to it.
The branch is part of a repository. 

What is the benefit of having a copy of the last known state of the remote stored locally?

You can more easily keep track of the differences between:
 - your version of the project (which contains offline changes) and the last known state of the remote
 - the current state of the remote and your last known state
Based on these changes you can merge the versions (branches) and sync the versions.


