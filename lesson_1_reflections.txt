How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It highlighted the changes made from a working version.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can inspire from previous changes when fixing things or adding new
features.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro: Each commit can be related to a logically independent change.
    Cons: You have the responsability of selecting when to commit - sometimes
          commits get too big.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is for projects that encompass several files, and one change usually
affects more than one file, while in Google Docs you change a single document
at a time.

How can you use the commands git log and git diff to view the history of files?

    With git log you see a list of commits made on the project. With diff you
can explore changes made between commits.

How might using version control make you more confident to make changes that
could break something?

    Using version control you can see which commit introduced the faulty code. 

Now that you have your workspace set up, what do you want to try using Git for?

    To control the versions of my Android ND projects.
